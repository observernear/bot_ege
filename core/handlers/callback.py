from aiogram import Bot
from aiogram.types import CallbackQuery, InputMediaDocument
from aiogram.types.input_file import FSInputFile
from aiogram.fsm.context import FSMContext
from random import randint
from datetime import datetime
import os


from db import db
from core.keyboards.inline import *
from core.fsm.state import *
from test import get_test


async def callback_handler(callback: CallbackQuery, bot: Bot, state: FSMContext):
    msg = ''
    if callback.data == "profile":
        user_date = db.get_date(callback.from_user.id)
        if user_date != str(datetime.now().day):
            up_ball = randint(2, 4)
            db.update_date(callback.from_user.id, datetime.now().day)
            db.update_ball(callback.from_user.id, up_ball)
            msg = f'<i>–¢–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ {up_ball} –±–∞–ª–ª–∞ –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ</i>'
        rating = db.get_num_rating(callback.from_user.id)
        ball = db.get_ball(callback.from_user.id)
        msg = f"<b>–ü—Ä–æ—Ñ–∏–ª—å</b>\n\n‚Ä¢–¢–≤–æ–π ID: {callback.from_user.id}\n‚Ä¢–¢–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Ä–µ–∏ÃÜ—Ç–∏–Ω–≥–µ: {rating}\n‚Ä¢–¢–≤–æ–π –±–∞–ª–ª: {ball}\n\n" + msg
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text=msg, reply_markup=main_cancel_inline_keyboard())

    # elif callback.data == "info":
    #     await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="<b>–§–£–ù–ö–¶–ò–û–ù–ê–õ</b>\n-–¢—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –±–∞–ª–ª—ã –∏ —Ä–µ–∏ÃÜ—Ç–∏–Ω–≥.\n-–Ø –º–æ–≥—É —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã <u>–ï–ì–≠</u>, –∞ —Ç–∞–∫–∂–µ –¥–∞–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ.\n-–£ –º–µ–Ω—è –µ—Å—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ç–µ–±—è.\n\n<b>–ë–ê–õ–õ–´</b>\n-–ë–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø–æ—Å–µ—â–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏ '–ü—Ä–æ—Ñ–∏–ª—å üë§', –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–æ –æ—Ç –¥–≤—É—Ö –±–∞–ª–ª–æ–≤ –¥–æ —á–µ—Ç—ã—Ä–µ—Ö –±–∞–ª–ª–æ–≤.\n-–ë–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ –¥–µ–Ω—å –∑–∞ —Å–æ—Å—Ç–∞–≤–µ–Ω–Ω—ã–π –º–Ω–æ—é –≤–∞—Ä–∏–∞–Ω—Ç(10 –±–∞–ª–ª–æ–≤).\n\n<b>–†–ï–ô–¢–ò–ù–ì</b>\n-–†–µ–π—Ç–∏–Ω–≥ - —ç—Ç–æ —Ç–≤–æ–µ –º–µ—Å—Ç–æ —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç—ã –º–æ–∂–µ—à—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ –ø–µ—Ä–≤–æ–º—É –º–µ—Å—Ç—É!", reply_markup=main_cancel_inline_keyboard())

    elif callback.data == "choose_subject":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–•–æ—Ä–æ—à–æ, –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=choose_subject_inline_keyboard())

    elif callback.data == "back_main":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–ß–µ–º –∑–∞–π–º—ë–º—Å—è?", reply_markup=main_inline_keyboard())
        try:
            await state.clear()
        except:
            pass

    elif callback.data == "donate":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ USDT:")
        await state.set_state(FSMuser.donate)


async def material_test_callback(callback: CallbackQuery, bot: Bot, state: FSMContext):
    subjects = await state.get_data()
    subject = subjects["subject"]
    if callback.data == "material":
        path = list(os.walk(f"files/materials/{subject}"))
        documents = []
        for i in path[0][2]:
            if len(documents) == 10:
                await bot.send_media_group(
                    chat_id=callback.message.chat.id, media=documents
                )
                documents = []
            documents.append(InputMediaDocument(media=FSInputFile(
                path=f"files/materials/{subject}/{i}", filename=i
            )))
        await bot.send_media_group(chat_id=callback.message.chat.id, media=documents)
        await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        answer = ['–í–æ—Ç –¥–µ—Ä–∂–∏!', '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è —Å–æ–±–∏—Ä–∞–ª)',
                  '–î–ª—è —Ç–µ–±—è –Ω–∏—á–µ–≥–æ –Ω–µ –∂–∞–ª–∫–æ XP', '–í–æ—Ç —Ç–≤–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª.']
        await bot.send_message(chat_id=callback.message.chat.id, text=f'{answer[randint(0, 3)]}\n<b>–ß—Ç–æ –¥–∞–ª—å—à–µ?</b>', reply_markup=main_inline_keyboard())
        await state.clear()
    elif callback.data == "make_test":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–ß—Ç–æ–±—ã —è —Å–º–æ–≥ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, —Ç—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –∫–∞–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è —Ç—ã —Ö–æ—á–µ—à—å –∏ —Å–∫–æ–ª—å–∫–æ –∏—Ö –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –≤–∞—Ä–∏–∞–Ω—Ç–µ. \n\n<i>–ü—Ä–∏–º–µ—Ä: 1-2 3-4 12-1</i>\n–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —è —Å–æ—Å—Ç–∞–≤–ª—é –¥–ª—è —Ç–µ–±—è –≤–∞—Ä–∏–∞–Ω—Ç —Å –¥–≤—É–º—è –∑–∞–¥–∞–Ω–∏—è–º–∏ ‚Ññ1, —Å —á–µ—Ç—ã—Ä—å–º—è –∑–∞–¥–∞–Ω–∏—è–º–∏ ‚Ññ3 –∏ –æ–¥–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º ‚Ññ12", reply_markup=main_cancel_inline_keyboard())
        await state.set_state(FSMsubject.problems)
    elif callback.data == "random_test":
        msg = ''
        date = db.get_date_test(callback.from_user.id)
        now_date = str(datetime.now().day)
        if date != now_date:
            db.update_date_test(callback.from_user.id, now_date)
            db.update_ball(callback.from_user.id, 10)
            msg = '\n\n<i>–¢–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10 –±–∞–ª–ª–æ–≤ –∑–∞ –≤–∞—Ä–∏–∞–Ω—Ç</i>'
        await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        message = await bot.send_message(chat_id=callback.message.chat.id, text="–Ø –≤—ã–±–∏—Ä–∞—é –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è —Ç–µ–±—è\n<i>–°–µ–∫—É–Ω–¥–æ—á–∫—É...</i>")
        dictionary_subjects = {"math": {1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1},
                               "inf": {1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1},
                               "rus": {1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1},
                               "phys": {1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1},
                               "en": {1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1},
                               "soc": {1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1}}
        save_path, save_path_solutions = get_test(
            subject=str(subject), problems=dictionary_subjects[subject])
        documents = [InputMediaDocument(media=FSInputFile(path=str(save_path), filename="–≤–∞—Ä–∏–∞–Ω—Ç.pdf")), InputMediaDocument(media=FSInputFile(
            path=str(save_path_solutions), filename="—Ä–µ—à–µ–Ω–∏–µ.pdf"))]
        await bot.send_media_group(chat_id=callback.message.chat.id, media=documents)
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        try:
            os.remove(save_path)
            os.remove(save_path_solutions)
        except:
            pass
        await bot.send_message(chat_id=callback.message.chat.id, text="–¢—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü!"+msg, reply_markup=main_inline_keyboard())
        await state.clear()
    elif callback.data == "back_main":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–ß–µ–º –∑–∞–π–º—ë–º—Å—è?", reply_markup=main_inline_keyboard())
        await state.clear()


async def choose_subject_callback(callback: CallbackQuery, bot: Bot, state: FSMContext):
    await state.set_state(FSMsubject.subject)
    await state.set_data({"subject": callback.data})
    list_words = ['–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä', '–ë–µ–∑ –ø—Ä–æ–±–ª–µ–º',
                  '–û–∫–µ–π', '–Ø –ª—é–±–ª—é —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç', '–°–º–µ–ª–æ']
    randint1 = randint(0, 4)
    msg = f"{list_words[randint1]}. –ë—É–¥–µ–º —É—á–∏—Ç—å —Ç–µ–æ—Ä–∏—é –∏–ª–∏ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è?)"
    await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text=msg, reply_markup=choose_type_inline_keyboard())


async def admin_callback(callback: CallbackQuery, bot: Bot, state: FSMContext):
    if callback.data == "count_users":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text=f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {len(db.get_users_id())}", reply_markup=callback.message.reply_markup)
    elif callback.data == "DB":
        msg = ''
        for i in db.get_db_data():
            username = (await bot.get_chat_member(int(i[1]), int(i[1]))).user.username
            msg += f"{i[0]}. username: @{username} ball: {i[2]} act: {i[4]} {i[5]} task: {i[3]}\n"
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text=f"<b>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:</b>\n\n"+msg, reply_markup=callback.message.reply_markup)
    elif callback.data == "push_message":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", reply_markup=admin_cancel_inline_keyboard())
        await state.set_state(FSMadmin.message_push)
    elif callback.data == "cancel":
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–û—Ç–º–µ–Ω–∞", reply_markup=admin_menu_inline_keyboard())
        await state.clear()
    elif callback.data == "send_db":
        file = FSInputFile(path='users.db', filename="users.db")
        await bot.edit_message_text(chat_id=callback.message.chat.id, message_id=callback.message.message_id, text="–û—Ç–ø—Ä–∞–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", reply_markup=admin_menu_inline_keyboard())
        await bot.send_document(chat_id=callback.message.chat.id, document=file)
